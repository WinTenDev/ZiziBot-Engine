@using System.Reactive.Linq
@using System.Reactive
@inherits ReactiveInjectableComponentBase<NoteAddViewModel>

<RadzenRow>
    <RadzenColumn Style="overflow-x: auto;">
        <RadzenStack>
            <RadzenRow Visible="NoteId != null">
                <RadzenText>Note ID</RadzenText>
                <RadzenTextBox @bind-Value="@ViewModel.NoteId" class="w-100" ReadOnly="true"></RadzenTextBox>
            </RadzenRow>

            <ChatSelector SelectorMode="SelectorMode.Dropdown" @bind-SelectedChatId="ViewModel.ChatId"></ChatSelector>

            <RadzenText>Query</RadzenText>
            <RadzenTextBox @bind-Value="@ViewModel.Query" class="w-100" required></RadzenTextBox>

            <RadzenText>Content</RadzenText>
            <RadzenTextArea @bind-Value="@ViewModel.Content" class="w-100" Rows="5"></RadzenTextArea>

            <RadzenText>Raw Button</RadzenText>
            <RadzenTextArea @bind-Value="@ViewModel.RawButton" class="w-100" Rows="5"></RadzenTextArea>

            <RadzenText>File ID</RadzenText>
            <RadzenTextBox @bind-Value="@ViewModel.FileId" class="w-100"></RadzenTextBox>

            <MediaTypeSelector @bind-MediaTypeId="ViewModel.MediaTypeId"></MediaTypeSelector>

            <RadzenText class="rz-py-3">Created: @ViewModel.CreatedDate, Updated: @ViewModel.UpdatedDate</RadzenText>
        </RadzenStack>
    </RadzenColumn>
</RadzenRow>
<RadzenRow>
    <RadzenColumn>
        <RadzenButton Text="Save" Click="() => Observable.Return(Unit.Default).InvokeCommand(ViewModel.OnSaveCommand)" Disabled="ViewModel.HasErrors"></RadzenButton>
        <RadzenButton Text="Cancel" Click="() => Observable.Return(Unit.Default).InvokeCommand(ViewModel.OnCancelCommand)" ButtonStyle="ButtonStyle.Danger"></RadzenButton>
    </RadzenColumn>
</RadzenRow>
