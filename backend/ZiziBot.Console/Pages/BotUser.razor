@page "/BotUser"
@using ZiziBot.DataSource.MongoDb.Entities
@using ZiziBot.Contracts.Enums
@using MongoFramework.Linq
@inherits WebComponentBase<BotUserViewModel>

<Title>Bot User</Title>

<h3>BotUser</h3>

@if (_botUsers.IsEmpty())
{
    <h2>Loading Users..</h2>
}
<RadzenDataGrid AllowFiltering="true"
                AllowColumnResize="true"
                AllowAlternatingRows="true"
                AllowPaging="true"
                AllowSorting="true"
                Density="Density.Compact"
                FilterMode="FilterMode.SimpleWithMenu"
                PageSize="20"
                PagerHorizontalAlign="HorizontalAlign.Left"
                ShowPagingSummary="true"
                Data="@_botUsers"
                TItem="BotUserEntity"
                LogicalFilterOperator="LogicalFilterOperator.Or"
                PageSizeOptions="@_pageSizeOptions"
                Sort="() => { }">
    <HeaderTemplate>
        <RadzenButton Click="LoadData">Refresh</RadzenButton>
    </HeaderTemplate>
    <Columns>
        <RadzenDataGridColumn TItem="BotUserEntity" Property="UserId" Title="UserId" Frozen="true" Width="100px"/>
        <RadzenDataGridColumn TItem="BotUserEntity" Property="FirstName" Title="First Name" Width="160px" Sortable="true"/>
        <RadzenDataGridColumn TItem="BotUserEntity" Property="LastName" Title="Last Name" Width="160px" Sortable="true"/>
        <RadzenDataGridColumn TItem="BotUserEntity" Property="Username" Title="UserName" Width="160px"/>
        <RadzenDataGridColumn TItem="BotUserEntity" Property="LanguageCode" Title="Language Code" Width="160px"/>
        <RadzenDataGridColumn TItem="BotUserEntity" Property="CreatedDate" Title="Created Date" Width="160px"/>
        <RadzenDataGridColumn TItem="BotUserEntity" Property="UpdatedDate" Title="Updated Date" Width="160px"/>
    </Columns>
</RadzenDataGrid>

@code {
    IEnumerable<BotUserEntity> _botUsers = new List<BotUserEntity>();
    readonly IEnumerable<int> _pageSizeOptions = new int[] {10, 20, 50, 100, 200 };


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await LoadData();
    }

    private async Task LoadData()
    {
        _botUsers = await MongoDbContextBase.BotUser.Where(x => x.Status == (int)EventStatus.Complete).ToListAsync();

    }
}